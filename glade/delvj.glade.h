char *s = N_(" Launch into:");
char *s = N_("/dev/video0");
char *s = N_("/dev/video1");
char *s = N_("/dev/video2");
char *s = N_("/tmp/salida.mov");
char *s = N_("0");
char *s = N_("1");
char *s = N_("2");
char *s = N_("3");
char *s = N_("320x240");
char *s = N_("3d composition");
char *s = N_("3d text 1");
char *s = N_("3d text 2");
char *s = N_("4");
char *s = N_("5");
char *s = N_("6");
char *s = N_("640x480");
char *s = N_("8000");
char *s = N_("<b>2d video output</b>");
char *s = N_("<b>Aging</b>");
char *s = N_("<b>Animation</b>");
char *s = N_("<b>Automatization of images inside mix</b>");
char *s = N_("<b>Autonervous</b>");
char *s = N_("<b>Autorot</b>");
char *s = N_("<b>Bluetooth</b>");
char *s = N_("<b>Channel 1</b>");
char *s = N_("<b>Channel 2</b>");
char *s = N_("<b>Crab</b>");
char *s = N_("<b>Current Sequence</b>");
char *s = N_("<b>Effects</b>");
char *s = N_("<b>Erode</b>");
char *s = N_("<b>High</b>");
char *s = N_("<b>Image Mix Modes:</b>");
char *s = N_("<b>Image Selection:</b>");
char *s = N_("<b>Loaded Images</b>");
char *s = N_("<b>Lows</b>");
char *s = N_("<b>Nervous</b>");
char *s = N_("<b>Object</b>");
char *s = N_("<b>Radiactive</b>");
char *s = N_("<b>Rhythm</b>");
char *s = N_("<b>Rotate</b>");
char *s = N_("<b>Selected Object</b>");
char *s = N_("<b>Sequence Edition</b>");
char *s = N_("<b>Sequences</b>");
char *s = N_("<b>Storm Control</b>");
char *s = N_("<b>Text Automatization</b>");
char *s = N_("<b>Text</b>");
char *s = N_("<b>Video Selection:</b>");
char *s = N_("<b>Warhol</b>");
char *s = N_("<b>ascii</b>");
char *s = N_("<b>blur</b>");
char *s = N_("<b>change between video channels with music</b>");
char *s = N_("<b>channel automatization 1</b>");
char *s = N_("<b>channel automatization 2</b>");
char *s = N_("<b>color cycle</b>");
char *s = N_("<b>compose</b>");
char *s = N_("<b>contrast</b>");
char *s = N_("<b>device</b>");
char *s = N_("<b>dice</b>");
char *s = N_("<b>image 1</b>");
char *s = N_("<b>image 2</b>");
char *s = N_("<b>image 3</b>");
char *s = N_("<b>image 4</b>");
char *s = N_("<b>phase</b>");
char *s = N_("<b>record to disk</b>");
char *s = N_("<b>rotate</b>");
char *s = N_("<b>salida de v√≠deo 3d</b>");
char *s = N_("<b>simura</b>");
char *s = N_("<b>stream video</b>");
char *s = N_("<b>texture channel</b>");
char *s = N_("<b>vol</b>");
char *s = N_("<b>webcam</b>");
char *s = N_("<b>zoom</b>");
char *s = N_("A_bout");
char *s = N_("Actions");
char *s = N_("Add");
char *s = N_("Adds the image to mix");
char *s = N_("Adjust all to 0");
char *s = N_("Adjust first element to 0 and move the rest appropiately");
char *s = N_("Adjust first to 0");
char *s = N_("Arm Length");
char *s = N_("Articulation");
char *s = N_("Authorize");
char *s = N_("Auto nervous X");
char *s = N_("Auto nervous Y");
char *s = N_("Auto nervous Z");
char *s = N_("Auto rotate X");
char *s = N_("Auto rotate Y");
char *s = N_("Auto rotate Z");
char *s = N_("Black");
char *s = N_("Bluetooth");
char *s = N_("By Letter");
char *s = N_("Cal3d 1");
char *s = N_("Cal3d 2");
char *s = N_("Cancel");
char *s = N_("Center");
char *s = N_("Center text");
char *s = N_("Change font");
char *s = N_("Change size of video window");
char *s = N_("Change text colour");
char *s = N_("Changes text scrolling direction");
char *s = N_("Clean");
char *s = N_("Clean State");
char *s = N_("Clean text from video");
char *s = N_("Clean the message queue");
char *s = N_("Configuration");
char *s = N_("Connect");
char *s = N_("Connect xmms to pd");
char *s = N_("Copy");
char *s = N_("Crab");
char *s = N_("Create a new sequence");
char *s = N_("Cube");
char *s = N_("Cube Mesh");
char *s = N_("Cube Size");
char *s = N_("Cubes");
char *s = N_("Delete");
char *s = N_("Delete Command");
char *s = N_("Delete all events from sequence");
char *s = N_("Delete image from screen");
char *s = N_("Delete selected event");
char *s = N_("Delete selected sequence");
char *s = N_("ElectricBall");
char *s = N_("Emission password in the icecast server");
char *s = N_("Enlarge");
char *s = N_("Enlarge image to fill whole frame");
char *s = N_("Event list for sequence");
char *s = N_("Explosion");
char *s = N_("Feed/Chat");
char *s = N_("File to record to");
char *s = N_("General");
char *s = N_("Google");
char *s = N_("H_elp");
char *s = N_("Icecast server to stream to");
char *s = N_("Image position in x axis");
char *s = N_("Image position in y axis");
char *s = N_("Images");
char *s = N_("Launch");
char *s = N_("Launch PureData");
char *s = N_("Launch image to output");
char *s = N_("Launch into:  ");
char *s = N_("Launch messages with specified time");
char *s = N_("Launch selected sequence");
char *s = N_("Launch with Reset");
char *s = N_("Left");
char *s = N_("Left justification");
char *s = N_("Lighting");
char *s = N_("Load");
char *s = N_("Load RSS");
char *s = N_("Load a text file");
char *s = N_("Load from Command");
char *s = N_("Load un RSS");
char *s = N_("Loaded messages list");
char *s = N_("Maximize video window");
char *s = N_("Mezcla los colores del video con los de la imagen");
char *s = N_("Mix");
char *s = N_("Mount point in the icecast server");
char *s = N_("New");
char *s = N_("New Sequence");
char *s = N_("Next");
char *s = N_("Object 1");
char *s = N_("Object 2");
char *s = N_("On/Off");
char *s = N_("Overlays image over mix");
char *s = N_("Pause");
char *s = N_("Play");
char *s = N_("Position for text in axis x");
char *s = N_("Position for text in axis y");
char *s = N_("Press here to start the video server");
char *s = N_("Previous");
char *s = N_("Put selected element one before in sequence");
char *s = N_("RESTART COMPOSITION");
char *s = N_("RSS Feeds");
char *s = N_("Record");
char *s = N_("Record events to current sequence");
char *s = N_("Record last changes to file");
char *s = N_("Recording");
char *s = N_("Reshade");
char *s = N_("Resta la image del video");
char *s = N_("Restar");
char *s = N_("Save Changes");
char *s = N_("Save State");
char *s = N_("Screen 1");
char *s = N_("Screen 2");
char *s = N_("Scroll");
char *s = N_("Search in Google");
char *s = N_("Sends image to output");
char *s = N_("Sent text to video");
char *s = N_("Sequences");
char *s = N_("Set time 0 to all elements (so they load at start of sequence)");
char *s = N_("Sphere");
char *s = N_("Sphere Mesh");
char *s = N_("Start Recording");
char *s = N_("Start Streaming");
char *s = N_("Start streaming through icecast server");
char *s = N_("Starts video recording to a file");
char *s = N_("Static");
char *s = N_("Stop");
char *s = N_("Stop PureData");
char *s = N_("Stop Recording");
char *s = N_("Stop Streaming");
char *s = N_("Stop event recording");
char *s = N_("Stop recording");
char *s = N_("Stop streaming");
char *s = N_("Stops automatic text launch");
char *s = N_("Storm");
char *s = N_("Streaming");
char *s = N_("Switches twin output for maximize on two projectors");
char *s = N_("Text 1");
char *s = N_("Text 2");
char *s = N_("Text lines appear one after the other");
char *s = N_("Text scrolls through window");
char *s = N_("Text stays in its place");
char *s = N_("Texts");
char *s = N_("Time between messages");
char *s = N_("Torus Size");
char *s = N_("Torus width");
char *s = N_("Up");
char *s = N_("Up/Down");
char *s = N_("Update");
char *s = N_("Video 1");
char *s = N_("Video 2");
char *s = N_("Videos");
char *s = N_("Write a text to send");
char *s = N_("X");
char *s = N_("XMMS control");
char *s = N_("Y");
char *s = N_("Z");
char *s = N_("_File");
char *s = N_("activate 2d output");
char *s = N_("activate 3d output");
char *s = N_("activate camera");
char *s = N_("activate monitor output");
char *s = N_("ascii");
char *s = N_("auto");
char *s = N_("ball 1");
char *s = N_("ball 2");
char *s = N_("beats");
char *s = N_("blend add");
char *s = N_("cal3d1");
char *s = N_("cal3d2");
char *s = N_("center");
char *s = N_("center mouse");
char *s = N_("change image inside folder automatically");
char *s = N_("channel 1");
char *s = N_("channel 2");
char *s = N_("configuration");
char *s = N_("crab");
char *s = N_("cube");
char *s = N_("data-J");
char *s = N_("define the 2 image loaded as texture for object");
char *s = N_("define the 3 image loaded as texture for object");
char *s = N_("define the 4 image loaded as texture for object");
char *s = N_("define the first image loaded into the texturing unit as texture for object");
char *s = N_("define video mix as texture for object");
char *s = N_("delcorp.org");
char *s = N_("delete");
char *s = N_("depth test");
char *s = N_("detail");
char *s = N_("dice");
char *s = N_("distortion");
char *s = N_("eject");
char *s = N_("electric ball");
char *s = N_("explosion");
char *s = N_("file name");
char *s = N_("fortune\n"
             "fortune lao-tse.fortunes\n"
             "fortune refranes.fortunes\n"
             "fortune informatica.fortunes\n"
             "fortune nietzsche.fortunes\n"
             "fortune ciencia.fortunes");
char *s = N_("fullscreen");
char *s = N_("general");
char *s = N_("generate thumbs");
char *s = N_("icecast server");
char *s = N_("image 1");
char *s = N_("image 2");
char *s = N_("image 3");
char *s = N_("image 4");
char *s = N_("images");
char *s = N_("launch");
char *s = N_("launch into channel 1");
char *s = N_("launch into channel 2");
char *s = N_("launch into image 1");
char *s = N_("launch into image 2");
char *s = N_("launch into image 3");
char *s = N_("launch into image 4");
char *s = N_("lighting");
char *s = N_("load text from command");
char *s = N_("mix");
char *s = N_("mix base: ");
char *s = N_("mount point");
char *s = N_("name for the new sequence");
char *s = N_("no");
char *s = N_("number of beats for change");
char *s = N_("off");
char *s = N_("on");
char *s = N_("opacity");
char *s = N_("opacity:");
char *s = N_("out");
char *s = N_("passwd");
char *s = N_("port");
char *s = N_("port in the icecast server");
char *s = N_("position");
char *s = N_("preview");
char *s = N_("random");
char *s = N_("record");
char *s = N_("repeat");
char *s = N_("reuse");
char *s = N_("rotoblur");
char *s = N_("screen 1");
char *s = N_("screen 2");
char *s = N_("select video from channel 1 as texture for the object");
char *s = N_("select video from channel 2 as texture for object");
char *s = N_("send to mix::");
char *s = N_("separation");
char *s = N_("sequences");
char *s = N_("set webcam video as texture");
char *s = N_("size");
char *s = N_("speed");
char *s = N_("stop");
char *s = N_("stop automatic switch between channels");
char *s = N_("storm");
char *s = N_("stream");
char *s = N_("superfor nerve");
char *s = N_("switch video channels with music");
char *s = N_("synced image change");
char *s = N_("synced image change inside folder");
char *s = N_("synced video change");
char *s = N_("text 1");
char *s = N_("text 2");
char *s = N_("texts");
char *s = N_("theora.ogg");
char *s = N_("time:");
char *s = N_("twin output");
char *s = N_("two videos at same time");
char *s = N_("videos");
char *s = N_("write search");
char *s = N_("x");
char *s = N_("x1");
char *s = N_("x2");
char *s = N_("x3");
char *s = N_("x4");
char *s = N_("x:");
char *s = N_("xmms control");
char *s = N_("xmms is not loaded");
char *s = N_("xxxxxx");
char *s = N_("y");
char *s = N_("y:");
char *s = N_("z");
char *s = N_("zoom");
char *s = N_("zoom:");
